<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <changeSet id="init db" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS author (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL,
            surname VARCHAR NOT NULL
            );

            CREATE TABLE IF NOT EXISTS genre (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL
            );

            CREATE TABLE IF NOT EXISTS book (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL,
            genre_id BIGINT NOT NULL,
            FOREIGN KEY (genre_id) REFERENCES genre (id)
            );

            CREATE TABLE IF NOT EXISTS author_book (
            book_id BIGINT NOT NULL,
            author_id BIGINT NOT NULL,
            FOREIGN KEY (book_id) REFERENCES book (id),
            FOREIGN KEY (author_id) REFERENCES author (id)
            );

            INSERT INTO author(name, surname) VALUES
            ('Alexander', 'Pushkin'),
            ('Nikolai', 'Gogol'),
            ('Lev', 'Tolstoy'),
            ('Mikhail', 'Bulgakov'),
            ('Fyodor', 'Dostoevsky');


            INSERT INTO genre(name) VALUES
            ('Short Story'),
            ('Novel'),
            ('Comedy'),
            ('Drama');

            INSERT INTO book(name, genre_id) VALUES
            ('War and Peace', 2),
            ('Crime and Punishment', 2),
            ('Nose', 1),
            ('Master and Margarita', 2);

            INSERT INTO author_book(book_id, author_id) VALUES
            (1, 3),
            (2, 5),
            (3, 2),
            (4, 4);

        </sql>
    </changeSet>
    <changeSet id="create_users_table" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) UNIQUE NOT NULL,
            password VARCHAR(100) NOT NULL,
            roles VARCHAR(100) NOT NULL
            );
        </sql>
    </changeSet>
    <changeSet id="insert_users" author="author name">
        <sql>
            INSERT INTO users (username, password, roles) VALUES
            ('user', 'password', 'USER'),
            ('admin', 'password', 'ADMIN,USER');
        </sql>
    </changeSet>


</databaseChangeLog>
